{"version":3,"sources":["components/ExpenseDate.js","components/Card.js","components/ExpenseItem.js","components/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/ExpensesChart.js","components/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","_jsxs","className","children","_jsx","Card","classes","ExpenseItem","title","amount","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","map","dataPoint","totalMaximum","max","apply","_toConsumableArray","ExpensesChart","_step","chartDataPoints","_iterator","_createForOfIteratorHelper","expenses","s","n","done","expense","getMonth","err","e","f","Expenses","_useState","useState","_useState2","_slicedToArray","filteredYear","setFilteredYear","filteredExpenses","items","filter","toString","expensesContent","length","id","selectedYear","ExpenseForm","enterdtitle","setEnterdtitle","_useState3","_useState4","enterdAmount","setEnterdAmount","_useState5","_useState6","enterdDate","setEnterdDate","onSubmit","preventDefault","enteredDate","Date","onSaveEexpenseDate","type","min","step","NewExpense","enteredExpenseData","expenseData","_objectSpread","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e7ea83ec.chunk.js","sourcesContent":["import \"./ExpenseDate.css\";\r\n\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseDate;\r\n","import \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  const classes = \"card \" + props.className;\r\n  return <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import ExpenseDate from \"./ExpenseDate\";\r\nimport \"./ExpenseItem.css\";\r\nimport Card from \"./Card\";\r\n\r\nconst ExpenseItem = (props) => {\r\n  return (\r\n    <Card className=\"expense-item\">\r\n      <ExpenseDate date={props.date} />\r\n      <div className=\"expense-item__description\">\r\n        <h2>{props.title}</h2>\r\n        <div className=\"expense-item__price\">${props.amount}</div>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import React from \"react\";\r\n\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropdownChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport Chart from \"./Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: \"jan\", value: 0 },\r\n    { label: \"feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Ddec\", value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n  return (\r\n    <div>\r\n      <Chart dataPoints={chartDataPoints} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import { useState } from \"react\";\r\n\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport \"./Expenses.css\";\r\nimport Card from \"./Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  let expensesContent = <p>No Expenses Found</p>;\r\n\r\n  if (filteredExpenses.length > 0) {\r\n    expensesContent = filteredExpenses.map((expense) => (\r\n      <ExpenseItem\r\n        key={expense.id}\r\n        title={expense.title}\r\n        amount={expense.amount}\r\n        date={expense.date}\r\n      />\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter\r\n        selected={filteredYear}\r\n        onChangeFilter={filterChangeHandler}\r\n      />\r\n      <ExpensesChart expenses={filteredExpenses} />\r\n      {expensesContent}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import { useState } from \"react\";\r\n\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enterdtitle, setEnterdtitle] = useState(\"\");\r\n  const [enterdAmount, setEnterdAmount] = useState(\"\");\r\n  const [enterdDate, setEnterdDate] = useState(\"\");\r\n\r\n  const titleChangeHandler = (e) => {\r\n    setEnterdtitle(e.target.value);\r\n  };\r\n\r\n  const amountChangeHandler = (e) => {\r\n    setEnterdAmount(e.target.value);\r\n  };\r\n\r\n  const dateChangeHandler = (e) => {\r\n    setEnterdDate(e.target.value);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const enteredDate = {\r\n      title: enterdtitle,\r\n      amount: enterdAmount,\r\n      date: new Date(enterdDate),\r\n    };\r\n\r\n    props.onSaveEexpenseDate(enteredDate);\r\n\r\n    setEnterdtitle(\"\");\r\n    setEnterdAmount(\"\");\r\n    setEnterdDate(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={submitHandler}>\r\n        <div className=\"new-expense__controls\">\r\n          <div className=\"new-expense__control\">\r\n            <label>Title</label>\r\n            <input\r\n              type=\"text\"\r\n              value={enterdtitle}\r\n              onChange={titleChangeHandler}\r\n            />\r\n          </div>\r\n          <div className=\"new-expense__control\">\r\n            <label>Amount</label>\r\n            <input\r\n              type=\"number\"\r\n              min=\"0.01\"\r\n              step=\"0.01\"\r\n              value={enterdAmount}\r\n              onChange={amountChangeHandler}\r\n            />\r\n          </div>\r\n          <div className=\"new-expense__control\">\r\n            <label>Date</label>\r\n            <input\r\n              type=\"date\"\r\n              min=\"2019-01-01\"\r\n              max=\"2022-02-03\"\r\n              value={enterdDate}\r\n              onChange={dateChangeHandler}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"new=expense__actions\">\r\n          <button type=\"submit\">Add Expense</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import \"./NewExpense.css\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\nconst NewExpense = (props) => {\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n\r\n    props.onAddExpense(expenseData);\r\n  };\r\n  return (\r\n    <div className=\"new-expense\">\r\n      <ExpenseForm onSaveEexpenseDate={saveExpenseDataHandler} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import Expenses from \"./components/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport { useState } from \"react\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nfunction App() {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}